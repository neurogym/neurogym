name: Build and upload to PyPI, deploy documentation

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  build:
    name: Build universal wheel and source distribution
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]

    # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip, install dependencies and the package
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing]
      - name: Build wheel and source distribution
        run: python3 -m build
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  upload_test_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN_NEUROGYM }}
          repository_url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN_NEUROGYM }}

  deploy_docs:
    name: Deploy documentation
    needs: upload_pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-tags: true
      - name: Fetch gh-pages
        run: git fetch origin gh-pages:gh-pages
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install requirements
        run: python3 -m pip install .[dev]
      - name: Configure git
        run: |
          git config user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "GitHub Actions"
          git config -l
      - name: Build documentation
        run: |
          version=$(git describe --tags --abbrev=0)
          mike deploy -p -u $version latest
